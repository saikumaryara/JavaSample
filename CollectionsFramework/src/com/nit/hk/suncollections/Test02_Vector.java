package com.nit.hk.suncollections;
import java.util.LinkedList;
import java.util.Vector;
public class Test02_Vector {
 public static void main(String[] args) {
 Vector<Object> v1 = new Vector<>();
 System.out.println("v1 capacity: "+ v1.capacity());
 System.out.println("v1 size    : "+ v1.size());
 System.out.println("v1 eles    : "+ v1.toString());
 System.out.println();
 v1.add("a");
 v1.add("b");
 System.out.println("v1 capacity: "+ v1.capacity());
 System.out.println("v1 size    : "+ v1.size());
 System.out.println("v1 eles    : "+ v1.toString());
 System.out.println();
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 Vector<Object> v2 = new Vector<>(v1);
 System.out.println("v2 capacity: "+ v2.capacity());
 System.out.println("v2 size    : "+ v2.size());
 System.out.println("v2 eles    : "+ v2.toString());
 System.out.println();
 v2.add("c");
 System.out.println("v2 capacity: "+ v2.capacity());
 System.out.println("v2 size    : "+ v2.size());
 System.out.println("v2 eles    : "+ v2.toString());
 System.out.println();
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 Vector<Object> v3 = new Vector<>(3);
 System.out.println("v3 capacity: "+ v3.capacity());
 System.out.println("v3 size    : "+ v3.size());
 System.out.println("v3 eles    : "+ v3.toString());
 System.out.println();
 v3.add("a");
 v3.add("b");
 v3.add("c");
 v3.add("d");
 System.out.println("v3 capacity: "+ v3.capacity());
 System.out.println("v3 size    : "+ v3.size());
 System.out.println("v3 eles    : "+ v3.toString());
 System.out.println();
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 Vector<Object> v4 = new Vector<>(3, 5);
 System.out.println("v4 capacity: "+ v4.capacity());
 System.out.println("v4 size    : "+ v4.size());
 System.out.println("v4 eles    : "+ v4.toString());
 System.out.println();
 v4.add("a");
 v4.add("b");
 v4.add("c");
 v4.add("d");
 System.out.println("v4 capacity: "+ v4.capacity());
 System.out.println("v4 size    : "+ v4.size());
 System.out.println("v4 eles    : "+ v4.toString());
 System.out.println();
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 //Vector<Object> v5 = new Vector<>(null);
 //Vector<Object> v6 = new Vector<>(-5);
 Vector<Object> v7 = new Vector<>(2, -5);
 System.out.println("v7 capacity: "+ v7.capacity());
 System.out.println("v7 size    : "+ v7.size());
 System.out.println("v7 eles    : "+ v7.toString());
 System.out.println();
 v7.add("a");
 v7.add("b");
 v7.add("c");
 System.out.println("v7 capacity: "+ v7.capacity());
 System.out.println("v7 size    : "+ v7.size());
 System.out.println("v7 eles    : "+ v7.toString());
 System.out.println();
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 Vector<Object> v8 = new Vector<>();
 System.out.println("v8 capacity: "+ v8.capacity());
 System.out.println("v8 size    : "+ v8.size());
 System.out.println("v8 eles    : "+ v8);
 System.out.println();
 v8.add("a");
 v8.add("b");
 v8.add(5);
 v8.add(6.7);
 v8.add('p');
 v8.add(true);
 v8.add("a");
 v8.add(5);
 v8.add(null);
 v8.add(null);
 v8.add(new A(5, 6));
 System.out.println("v8 capacity: "+ v8.capacity());
 System.out.println("v8 size    : "+ v8.size());
 System.out.println("v8 eles    : "+ v8);
 System.out.println();
 System.out.println("random access 3rd index object: "+ v8.get(3));
 System.out.println();
 for(int i=0; i<v8.size(); i++) {
 System.out.println("sequential access "+(i)+" index object: "+ v8.get(i));
 }
 System.out.println();

 System.out.println("searching for string obj a: " + v8.contains("a"));
 System.out.println("removing string obj a: " + v8.remove("a"));
 System.out.println("v8 capacity: "+ v8.capacity());
 System.out.println("v8 size    : "+ v8.size());
 System.out.println("v8 eles    : "+ v8);
 System.out.println();
 System.out.println("searching for class A obj: " + v8.contains(new A(5, 6)));
 System.out.println("\nremoving class A obj: " + v8.remove(new A(5, 6)));
 System.out.println("v8 capacity: "+ v8.capacity());
 System.out.println("v8 size    : "+ v8.size());
 System.out.println("v8 eles    : "+ v8);
 System.out.println();
 }
}